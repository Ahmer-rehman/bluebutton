<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton - http://www.bigbluebutton.org
  
  Copyright (c) 2008-2009 by respective authors (see below). All rights reserved.
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 3 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, If not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
--> 

<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml"
	implements="org.bigbluebutton.common.IBigBlueButtonModule"
	creationComplete="onCreationComplete()" xmlns:maps="org.bigbluebutton.modules.participants.maps.*" >
	
	<maps:ParticipantsEventMap id="participantsEventMap" />
	
	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			
			import org.bigbluebutton.common.LogUtil;
			import org.bigbluebutton.common.events.CloseWindowEvent;
			import org.bigbluebutton.common.events.OpenWindowEvent;
			import org.bigbluebutton.modules.participants.views.ParticipantsWindow;
			
			private var _moduleName:String = "Participants Module";
			private var _attributes:Object;
			private var dispatcher:Dispatcher;
			private var participantsWindow:ParticipantsWindow;
			
			private function onCreationComplete():void {
				LogUtil.debug("ParticipantsModule Initialized");		
			}
			
			public function get moduleName():String {
				return _moduleName;
			}
						
			public function start(attributes:Object):void {
				_attributes = attributes;
				dispatcher = new Dispatcher();
				
				participantsWindow = new ParticipantsWindow();
				
				var windowEvent:OpenWindowEvent = new OpenWindowEvent(OpenWindowEvent.OPEN_WINDOW_EVENT);
				windowEvent.window = participantsWindow;
				dispatcher.dispatchEvent(windowEvent);
			}
		
			public function stop():void {
				var event:CloseWindowEvent = new CloseWindowEvent(CloseWindowEvent.CLOSE_WINDOW_EVENT);
				event.window = participantsWindow;
				dispatcher.dispatchEvent(event);
			}
		]]>
	</mx:Script>
	
</mx:Module>
