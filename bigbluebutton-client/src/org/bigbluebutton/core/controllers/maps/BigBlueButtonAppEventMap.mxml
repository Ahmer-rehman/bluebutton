<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton open source conferencing system - http://www.bigbluebutton.org
  
  Copyright (c) 2010 BigBlueButton Inc. and by respective authors (see below).
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 2.1 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
--> 

<EventMap xmlns="http://mate.asfusion.com/" xmlns:mx="http://www.adobe.com/2006/mxml">
    <mx:Script>
        <![CDATA[
            import org.bigbluebutton.core.controllers.events.ConfigLoadEvent;
            import org.bigbluebutton.core.controllers.events.GotAllUsersEvent;
            import org.bigbluebutton.core.controllers.events.LocaleEvent;
            import org.bigbluebutton.core.controllers.events.ModuleLoadedEvent;
            import org.bigbluebutton.core.controllers.events.UserAuthenticatedEvent;
            import org.bigbluebutton.core.controllers.events.UsersConnectionEvent;
            import org.bigbluebutton.core.model.MeetingModel;
            import org.bigbluebutton.core.model.UsersModel;
            import org.bigbluebutton.core.services.ConfigLoaderService;
            import org.bigbluebutton.core.services.ConfigToModuleDataParser;
            import org.bigbluebutton.core.services.JoinAPIService;
            import org.bigbluebutton.core.services.LocaleConfigLoader;
            import org.bigbluebutton.core.services.LocaleLoaderService;
            import org.bigbluebutton.core.services.Red5BBBAppConnectionService;
            import org.bigbluebutton.core.services.UsersService;
            import org.bigbluebutton.main.events.BBBEvent;
        ]]>
    </mx:Script>
	<!--
	This is the main event map for the application, think of it as the application controller.
	-->
	<EventHandlers type="{FlexEvent.PREINITIALIZE}">
		<!--
		The FlexEvent.PREINITIALIZE event is a good place for creating and initializing managers.
		-->
        <ObjectBuilder generator="{ConfigLoaderService}" cache="global" constructorArguments="{scope.dispatcher}"/>
        <ObjectBuilder generator="{ConfigModel}" cache="global"/>
        <ObjectBuilder generator="{MeetingModel}" cache="global" constructorArguments="{scope.dispatcher}"/>
		<ObjectBuilder generator="{LocaleModel}" cache="global" constructorArguments="{scope.dispatcher}"/>
		<ObjectBuilder generator="{ModuleModel}" cache="global" constructorArguments="{scope.dispatcher}"/>
        <ObjectBuilder generator="{BigBlueButtonAppEventMapDelegate}" cache="global" constructorArguments="{scope.dispatcher}"/>
        <ObjectBuilder generator="{ConfigToModuleDataParser}" cache="global"/>
        <ObjectBuilder generator="{UsersModel}" cache="global" constructorArguments="{scope.dispatcher}"/>
        <ObjectBuilder generator="{JoinAPIService}" cache="global" constructorArguments="{[lastReturn, scope.dispatcher]}"/>
        <ObjectBuilder generator="{Red5BBBAppConnectionService}" cache="global" constructorArguments="{scope.dispatcher}"/>
        <ObjectBuilder generator="{UsersService}" cache="global" constructorArguments="{scope.dispatcher}"/>
	</EventHandlers>
    
    <EventHandlers type="{FlexEvent.APPLICATION_COMPLETE}">
        <ObjectBuilder generator="{LocaleModel}" cache="global" constructorArguments="{scope.dispatcher}"/>
        <ObjectBuilder generator="{LocaleConfigLoader}" cache="global" constructorArguments="{[scope.dispatcher, lastReturn]}"/>
    </EventHandlers>

    <EventHandlers type="{LocaleEvent.LOCALE_VERSION_SAME_EVENT}">
        <MethodInvoker generator="{ModuleModel}" method="loadAllModules"/>
    </EventHandlers>

    <EventHandlers type="{ModuleLoadedEvent.MODULE_LOADED_EVENT}">
        <MethodInvoker generator="{ModuleModel}" method="loadAllModules"/>
    </EventHandlers>

    <EventHandlers type="{ModuleLoadedEvent.ALL_MODULES_LOADED_EVENT}">
        <ObjectBuilder generator="{ConfigModel}"/>
        <MethodInvoker generator="{JoinAPIService}" method="join" arguments="{lastReturn.enterApiURI}"/>
    </EventHandlers>

    <EventHandlers type="{UserAuthenticatedEvent.USER_AUTHENTICATED_EVENT}">
        <MethodInvoker generator="{Red5BBBAppConnectionService}" method="connect"/>
    </EventHandlers>

    <EventHandlers type="{GotAllUsersEvent.GOT_ALL_USERS_EVENT}">
        <MethodInvoker generator="{ModuleModel}" method="startAllModules"/>
    </EventHandlers>
    
    <EventHandlers type="{UsersConnectionEvent.CONNECTION_SUCCESS}">
        <MethodInvoker generator="{UsersService}" method="getAllUsers"/>
    </EventHandlers>

    <EventHandlers type="{BBBEvent.PRESENTATION_CONVERTED}">
        <MethodInvoker generator="{UsersService}" method="presentationConverted"/>
    </EventHandlers>
    
    <EventHandlers type="{ConfigLoadEvent.CONFIG_LOADED_EVENT}">
        <MethodInvoker generator="{ConfigModel}" method="setConfig" arguments="{event.config}"/>
        <ObjectBuilder generator="{ModuleModel}" cache="global" constructorArguments="{scope.dispatcher}"/>
        <MethodInvoker generator="{ConfigToModuleDataParser}" method="parseConfig" arguments="{[event.config, lastReturn]}"/>  
    	<ObjectBuilder generator="{ConfigModel}"/>
    	<MethodInvoker generator="{LocaleModel}" method="compareLocale" arguments="{lastReturn.localeVersion}"/>
    </EventHandlers>
    
    <EventHandlers type="{LocaleEvent.LOAD_PREFERRED_LOCALE_SUCCEEDED_EVENT}">
        <MethodInvoker generator="{ConfigLoaderService}" method="loadConfig"/>
    </EventHandlers>
    
    <EventHandlers type="{LocaleEvent.LOAD_MASTER_LOCALE_SUCCEEDED_EVENT}">
        <MethodInvoker generator="{LocaleModel}" method="loadPreferredLocale"/>
    </EventHandlers>

    <EventHandlers type="{LocaleEvent.LOAD_LOCALE_SUCCEEDED_LOADED_EVENT}">
        <MethodInvoker generator="{LocaleModel}" method="localeLoaded" arguments="{event.loadedLocale}"/>
    </EventHandlers>
    
    <EventHandlers type="{LocaleEvent.LIST_OF_AVAILABLE_LOCALES_LOADED_EVENT}">
        <MethodInvoker generator="{LocaleModel}" method="loadMasterLocale"/>
    </EventHandlers>
       
    <Injectors target="{Red5BBBAppConnectionService}">
        <PropertyInjector targetKey="meetingModel" source="{MeetingModel}"/>
        <PropertyInjector targetKey="configModel" source="{ConfigModel}"/>
        <PropertyInjector targetKey="usersModel" source="{UsersModel}"/>
    </Injectors>

    <Injectors target="{UsersService}">
        <PropertyInjector targetKey="meetingModel" source="{MeetingModel}"/>
        <PropertyInjector targetKey="red5Conn" source="{Red5BBBAppConnectionService}"/>
    </Injectors>
    
	<mx:Script>
	<![CDATA[
        import mx.events.FlexEvent;
        
        import org.bigbluebutton.core.controllers.events.StartAppEvent;
        import org.bigbluebutton.core.model.ConfigModel;
        import org.bigbluebutton.core.model.LocaleModel;
        import org.bigbluebutton.core.model.ModuleModel;
		
	]]>
	</mx:Script>
</EventMap>
